name: Release Docker

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  push-image:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: lddc-fastapi
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU (multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare metadata
        id: meta
        shell: bash
        run: |
          echo "VERSION=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          OWNER_LC="${GITHUB_REPOSITORY_OWNER,,}"
          echo "OWNER_LC=${OWNER_LC}" >> "$GITHUB_OUTPUT"

      - name: Build and push (linux/amd64, linux/arm64)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.VERSION }}
            ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/${{ env.IMAGE_NAME }}:latest
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.version=${{ steps.meta.outputs.VERSION }}

      - name: Create deployable tarball artifact
        shell: bash
        run: |
          docker pull ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.VERSION }}
          docker save ghcr.io/${{ steps.meta.outputs.OWNER_LC }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.VERSION }} | gzip > ${{ env.IMAGE_NAME }}-${{ steps.meta.outputs.VERSION }}.tar.gz

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_NAME }}-${{ steps.meta.outputs.VERSION }}.tar.gz
          path: ${{ env.IMAGE_NAME }}-${{ steps.meta.outputs.VERSION }}.tar.gz